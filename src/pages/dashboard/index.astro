---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Protected by middleware - only admins can access
const { userId, isAdmin } = Astro.locals;
if (!userId || !isAdmin) {
  return Astro.redirect('/');
}

const posts = await getCollection('blog');

// Calculate statistics
const totalPosts = posts.length;
const categoryCounts = posts.reduce((acc, post) => {
  const category = post.data.category || 'Uncategorized';
  acc[category] = (acc[category] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

const recentPosts = posts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 5);

const monthlyPosts = posts.reduce((acc, post) => {
  const month = post.data.pubDate.toLocaleString('default', { month: 'long', year: 'numeric' });
  acc[month] = (acc[month] || 0) + 1;
  return acc;
}, {} as Record<string, number>);
---

<Layout title="Dashboard">
  <div class="dashboard">
    <header>
      <div class="header-content">
        <h1>Dashboard</h1>
        <a href="/manage-articles" class="manage-link">
          Manage Articles
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" width="20" height="20">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </a>
      </div>
    </header>

    <div class="stats-grid">
      <div class="stat-card total-posts">
        <div class="stat-icon">üìö</div>
        <div class="stat-content">
          <h3>Total Articles</h3>
          <p class="stat-number">{totalPosts}</p>
        </div>
      </div>

      <div class="stat-card categories">
        <div class="stat-icon">üè∑Ô∏è</div>
        <div class="stat-content">
          <h3>Categories</h3>
          <p class="stat-number">{Object.keys(categoryCounts).length}</p>
        </div>
      </div>

      <div class="stat-card latest">
        <div class="stat-icon">üïí</div>
        <div class="stat-content">
          <h3>Latest Post</h3>
          <p class="stat-text">
            {recentPosts[0]?.data.title || 'No posts yet'}
          </p>
        </div>
      </div>

      <div class="stat-card monthly">
        <div class="stat-icon">üìÖ</div>
        <div class="stat-content">
          <h3>This Month</h3>
          <p class="stat-number">
            {monthlyPosts[new Date().toLocaleString('default', { month: 'long', year: 'numeric' })] || 0}
          </p>
        </div>
      </div>
    </div>

    <div class="charts-grid">
      <div class="chart-card">
        <h3>Articles by Category</h3>
        <div class="category-chart">
          {Object.entries(categoryCounts).map(([category, count]) => (
            <div class="category-bar">
              <div class="bar-label">{category}</div>
              <div class="bar-container">
                <div 
                  class="bar" 
                  style={`width: ${(count / totalPosts) * 100}%`}
                >
                  <span class="bar-value">{count}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div class="chart-card">
        <h3>Recent Articles</h3>
        <div class="recent-posts">
          {recentPosts.map((post) => (
            <a href={`/blog/${post.slug}`} class="recent-post">
              <div class="post-date">
                {post.data.pubDate.toLocaleDateString('default', { 
                  month: 'short',
                  day: 'numeric'
                })}
              </div>
              <div class="post-title">{post.data.title}</div>
              <div class="post-category">{post.data.category}</div>
            </a>
          ))}
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .dashboard {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2em;
  }

  header {
    margin-bottom: 2em;
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  h1 {
    margin: 0;
    color: var(--primary-dark);
    text-shadow: none;
  }

  .manage-link {
    display: flex;
    align-items: center;
    gap: 0.5em;
    background: var(--primary-main);
    color: white;
    padding: 0.8em 1.5em;
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.2s;
  }

  .manage-link:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1.5em;
    margin-bottom: 2em;
  }

  .stat-card {
    background: var(--primary-light);
    padding: 1.5em;
    border-radius: 12px;
    display: flex;
    align-items: center;
    gap: 1em;
    transition: transform 0.2s;
  }

  .stat-card:hover {
    transform: translateY(-2px);
  }

  .stat-icon {
    font-size: 2em;
    background: white;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
  }

  .stat-content {
    flex: 1;
  }

  .stat-content h3 {
    margin: 0;
    color: var(--primary-dark);
    font-size: 1em;
    text-shadow: none;
  }

  .stat-number {
    font-size: 2em;
    font-weight: bold;
    color: var(--primary-dark);
    margin: 0.2em 0 0 0;
  }

  .stat-text {
    margin: 0.2em 0 0 0;
    color: var(--primary-dark);
    font-size: 1.1em;
  }

  .charts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 1.5em;
  }

  .chart-card {
    background: var(--primary-light);
    padding: 1.5em;
    border-radius: 12px;
  }

  .chart-card h3 {
    margin: 0 0 1em 0;
    color: var(--primary-dark);
    text-shadow: none;
  }

  .category-chart {
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .category-bar {
    display: flex;
    align-items: center;
    gap: 1em;
  }

  .bar-label {
    width: 100px;
    color: var(--primary-dark);
    font-weight: 500;
  }

  .bar-container {
    flex: 1;
    height: 30px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 15px;
    overflow: hidden;
  }

  .bar {
    height: 100%;
    background: var(--primary-main);
    border-radius: 15px;
    display: flex;
    align-items: center;
    padding: 0 1em;
    transition: width 0.3s ease;
    min-width: 40px;
  }

  .bar-value {
    color: white;
    font-weight: 500;
    font-size: 0.9em;
  }

  .recent-posts {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
  }

  .recent-post {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    gap: 1em;
    padding: 1em;
    background: white;
    border-radius: 8px;
    text-decoration: none;
    color: inherit;
    transition: all 0.2s;
  }

  .recent-post:hover {
    transform: translateX(4px);
    background: var(--primary-main);
    color: white;
  }

  .post-date {
    font-size: 0.9em;
    color: var(--primary-dark);
  }

  .post-title {
    font-weight: 500;
    color: var(--primary-dark);
  }

  .post-category {
    font-size: 0.9em;
    color: var(--primary-main);
    background: var(--primary-light);
    padding: 0.2em 0.8em;
    border-radius: 12px;
  }

  .recent-post:hover .post-date,
  .recent-post:hover .post-title {
    color: white;
  }

  .recent-post:hover .post-category {
    background: white;
  }

  /* Dark mode styles */
  :global(.dark) .stat-card,
  :global(.dark) .chart-card {
    background: rgba(var(--primary-main-rgb), 0.2);
  }

  :global(.dark) .stat-icon {
    background: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .stat-content h3,
  :global(.dark) .stat-number,
  :global(.dark) .stat-text,
  :global(.dark) .chart-card h3,
  :global(.dark) .bar-label,
  :global(.dark) .post-date,
  :global(.dark) .post-title {
    color: white;
  }

  :global(.dark) .recent-post {
    background: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .post-category {
    background: rgba(255, 255, 255, 0.2);
    color: white;
  }

  :global(.dark) .bar-container {
    background: rgba(255, 255, 255, 0.1);
  }

  @media (max-width: 768px) {
    .dashboard {
      padding: 1em;
    }

    .charts-grid {
      grid-template-columns: 1fr;
    }

    .header-content {
      flex-direction: column;
      align-items: flex-start;
      gap: 1em;
    }

    .manage-link {
      width: 100%;
      justify-content: center;
    }
  }
</style>