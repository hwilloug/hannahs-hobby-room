---
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Footer from './Footer.astro';
import { SITE_TITLE } from '../utils/consts';
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import GardeningIcon from './icons/GardeningIcon.astro';
import AntiquingIcon from './icons/AntiquingIcon.astro';
import BooksIcon from './icons/BooksIcon.astro';
import CodingIcon from './icons/CodingIcon.astro';
import CraftsIcon from './icons/CraftsIcon.astro';

const { category, description, background } = Astro.props;

const posts = (await getCollection('blog', (post) => post.data.category === category)).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const icons = {
	gardening: GardeningIcon,
	crafts: CraftsIcon,
	antiquing: AntiquingIcon,
	coding: CodingIcon,
	books: BooksIcon,
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${category} - ${SITE_TITLE}`} description={description} />
		<style>
			main {
				width: 100%;
				margin: 0 auto;
				padding: 3em 1em;
			}
			.category-layout {
				max-width: 1200px;
				margin: 0 auto;
			}
			.category-header {
				text-align: center;
				margin: 3em;
				padding: 3em 2em;
				background: var(--primary-main);
				border-radius: 12px;
				color: white;
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
				border: 1px solid var(--primary-dark);
			}
			.category-header h1 {
				margin: 0;
				color: white;
				font-size: 3em;
				display: flex;
				align-items: center;
				justify-content: center;
				gap: 0.5em;
			}
			.category-header h2 {
				color: white;
				text-shadow: var(--text-shadow);
			}
			.icon {
				display: flex;
				align-items: center;
				justify-content: center;
				width: 60px;
				height: 60px;
				background: rgba(255, 255, 255, 0.2);
				border-radius: 12px;
				padding: 12px;
			}
			.icon :global(svg) {
				width: 100%;
				height: 100%;
				stroke: white;
			}
			.category-header p {
				margin-top: 1em;
				color: rgba(255, 255, 255, 0.9);
				font-size: 1.2em;
				max-width: 600px;
				margin-left: auto;
				margin-right: auto;
			}
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
				gap: 2rem;
				padding: 0;
				list-style: none;
			}
			.posts-grid li {
				width: 100%;
				min-width: 0;
			}
			.browser-window {
				background: var(--secondary-light);
				border: 1px solid var(--secondary-dark);
				border-radius: 12px;
				overflow: hidden;
				box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
				transition: transform 0.2s, box-shadow 0.2s;
				text-decoration: none;
				color: inherit;
				display: block;
				height: 100%;
			}
			.browser-window:hover {
				transform: translateY(-4px);
				box-shadow: 8px 8px var(--secondary-dark);
			}
			.browser-header {
				background: var(--secondary-main);
				padding: 8px;
				border-bottom: 1px solid var(--secondary-dark);
				display: flex;
				align-items: center;
				gap: 8px;
			}
			.browser-actions {
				display: flex;
				gap: 6px;
			}
			.browser-action {
				width: 12px;
				height: 12px;
				border-radius: 50%;
			}
			.browser-action:nth-child(1) { background: #ff5f57; }
			.browser-action:nth-child(2) { background: #ffbd2e; }
			.browser-action:nth-child(3) { background: #28c940; }
			.browser-address {
				background: var(--secondary-light);
				border-radius: 4px;
				padding: 4px 8px;
				font-size: 0.8em;
				color: var(--primary-dark);
				flex: 1;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
			}
			.browser-content {
				padding: 1em;
			}
			.browser-content img {
				width: 100%;
				height: 200px;
				object-fit: cover;
				border-radius: 8px;
				margin-bottom: 1em;
			}
			.title {
				margin: 0;
				color: var(--primary-dark);
				line-height: 1.2;
				font-size: 1.4em;
				font-family: 'Gluten', sans-serif;
			}
			.date {
				margin: 0.5em 0;
				color: rgb(var(--gray));
				font-size: 0.9em;
			}
			.description {
				margin: 0.5em 0 0;
				color: rgb(var(--gray-dark));
				line-height: 1.5;
			}
			.white {
				color: white;
			}

			@media (max-width: 768px) {
				main {
					padding: 1em 0.5em;
				}
				.category-header {
					padding: 2em 1em;
					margin: 2em 0;
				}
				.category-header h1 {
					font-size: 2em;
				}
				.icon {
					width: 40px;
					height: 40px;
					padding: 8px;
				}
				.posts-grid {
					grid-template-columns: 1fr;
					gap: 1rem;
					padding: 0;
				}
				.browser-window {
					max-width: 100%;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="category-layout">
			<div class="category-header">
				<h1>
					<span class="icon">
						{
							(() => {
								const Icon = icons[category.toLowerCase()];
								return Icon && <Icon class="icon-svg" />;
							})()
						}
					</span>
					{category}
				</h1>
				<p>{description}</p>
			</div>
			<section>
				<ul class="posts-grid">
					{
						posts.map((post) => (
							<li>
								<a href={`/blog/${post.slug}/`} class="browser-window">
									<div class="browser-header">
										<div class="browser-actions">
											<span class="browser-action"></span>
											<span class="browser-action"></span>
											<span class="browser-action"></span>
										</div>
										<div class="browser-address">{post.data.title}</div>
									</div>
									<div class="browser-content">
										<img src={post.data.heroImage} alt="" />
										<h2 class="title">{post.data.title}</h2>
										<p class="date">
											<FormattedDate date={post.data.pubDate} />
										</p>
										<p class="description">{post.data.subtitle}</p>
									</div>
								</a>
							</li>
						))
					}
				</ul>
			</section>
			{background && (
				<section class="category-header">
					<h2 class="centered">My {category} Background</h2>
					<p class="left">{background}</p>
				</section>
				)}
			</div>
		</main>
		<Footer />
	</body>
</html>