---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import DarkModeToggle from './DarkModeToggle.astro';
import GardeningIcon from './icons/GardeningIcon.astro';
import CraftsIcon from './icons/CraftsIcon.astro';
import CodingIcon from './icons/CodingIcon.astro';
import BooksIcon from './icons/BooksIcon.astro';
import AntiquingIcon from './icons/AntiquingIcon.astro';
---
<header>
	<nav>
		<div class="nav-top">
			<div class="left-section">
				<div class="app-icon">
					<img src="/poppy.png" alt="Poppy Logo" />
				</div>
				<h2 id="app-title"><a href="/">{SITE_TITLE}</a></h2>
			</div>
			<div class="search-section">
				<div class="search-container">
					<input 
						type="search" 
						id="search-input" 
						placeholder="Search posts..."
						aria-label="Search posts"
						autocomplete="off"
					/>
					<div id="search-results" class="search-results"></div>
				</div>
			</div>
			<div class="right-section">
				<DarkModeToggle />
				<HeaderLink href="/about" class="hide-mobile">
					<div class="nav-content">
						<span class="icon">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 icon-svg">
								<path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z" />
							</svg>							
						</span>
						<span class="text">About</span>
					</div>
				</HeaderLink>
				<button class="menu-toggle" aria-label="Toggle menu" id="menu-toggle">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<line x1="3" y1="12" x2="21" y2="12"></line>
						<line x1="3" y1="6" x2="21" y2="6"></line>
						<line x1="3" y1="18" x2="21" y2="18"></line>
					</svg>
				</button>
			</div>
		</div>
		<div class="nav-bottom" id="nav-container">
			<div class="internal-links">
				<HeaderLink href="/categories/crafts">
					<div class="nav-content">
						<span class="icon">
							<CraftsIcon class="size-6 icon-svg" />
						</span>
						<span class="text">Crafts</span>
					</div>
				</HeaderLink>
				<HeaderLink href="/categories/gardening">
					<div class="nav-content">
						<span class="icon">
							<GardeningIcon class="size-6 icon-svg" />
						</span>
						<span class="text">Gardening</span>
					</div>
				</HeaderLink>
				<HeaderLink href="/categories/coding">
					<div class="nav-content">
						<span class="icon">
							<CodingIcon class="size-6 icon-svg" />
						</span>
						<span class="text">Coding</span>
					</div>
				</HeaderLink>
				<HeaderLink href="/categories/books">
					<div class="nav-content">
						<span class="icon">
							<BooksIcon class="size-6 icon-svg" />
						</span>
						<span class="text">Books</span>
					</div>
				</HeaderLink>
				<HeaderLink href="/categories/antiquing">
					<div class="nav-content">
						<span class="icon">
							<AntiquingIcon class="size-6 icon-svg" />
						</span>
						<span class="text">Antiquing</span>
					</div>
				</HeaderLink>
			</div>
		</div>
	</nav>
</header>

<style>
	header {
		background: var(--primary-main);
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
	}

	nav {
		margin: 0 auto;
		color: white;
		padding: 0.5em;
		position: relative;
		border-bottom: 1px solid var(--primary-dark);
	}

	.nav-top {
		display: flex;
		align-items: center;
		justify-content: space-between;
		border-bottom: 1px solid rgba(255, 255, 255, 0.1);
		flex-wrap: nowrap;
		gap: 0.5em;
	}

	.left-section {
		display: flex;
		align-items: center;
		gap: 1em;
		flex: 0 0 auto;
	}

	.right-section {
		display: flex;
		align-items: center;
		gap: 1em;
		flex: 0 0 auto;
	}

	.app-icon {
		width: 50px;
		height: 50px;
	}

	#app-title {
		margin: 0;
		font-size: 2em;
		font-weight: bolder;
	}

	#app-title a {
		color: white;
		text-decoration: none;
	}

	.nav-bottom {
		margin-top: 0.5em;
		display: flex;
		justify-content: center;
	}

	.internal-links {
		display: flex;
		gap: 1em;
		flex-wrap: wrap;
		justify-content: center;
	}

	.nav-content {
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	.icon {
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.text {
		font-size: 1em;
		opacity: 1;
		transition: all 0.2s ease-in-out;
	}

	.menu-toggle {
		background: none;
		border: none;
		color: white;
		cursor: pointer;
		padding: 0.5em;
		display: none;
		align-items: center;
		justify-content: center;
	}

	.search-section {
		flex: 1 1 auto;
		display: flex;
		justify-content: center;
		padding: 0 1em;
		min-width: 200px;
	}

	.search-container {
		position: relative;
		width: 100%;
		max-width: 400px;
	}

	#search-input {
		width: 100%;
		padding: 0.5em 1em;
		border: 1px solid rgba(255, 255, 255, 0.2);
		border-radius: 20px;
		background: rgba(255, 255, 255, 0.1);
		color: white;
		font-size: 1em;
	}

	#search-input::placeholder {
		color: rgba(255, 255, 255, 0.7);
	}

	#search-input:focus {
		outline: none;
		background: rgba(255, 255, 255, 0.15);
		border-color: rgba(255, 255, 255, 0.3);
	}

	.search-results {
		display: none;
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		background: var(--primary-main);
		border: 1px solid var(--primary-dark);
		border-radius: 8px;
		margin-top: 0.5em;
		max-height: 400px;
		overflow-y: auto;
		z-index: 1000;
		padding: 0.5em;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	}

	.search-results .search-result-item {
		padding: 0.75em 1em;
		border-radius: 4px;
		color: white;
		margin-bottom: 0.25em;
		transition: all 0.2s ease;
		cursor: pointer;
	}

	.search-results .search-result-item:hover {
		background: var(--primary-dark);
		transform: translateY(-1px);
	}

	.search-results .search-result-item:last-child {
		margin-bottom: 0;
	}

	.search-results .search-result-title {
		font-weight: bold;
	}

	.search-results .view-all {
		text-align: center;
		background: white;
		color: var(--primary-main);
		font-weight: bold;
		padding: 1em;
		margin-top: 0.75em;
		border-radius: 4px;
		transition: all 0.2s ease;
		cursor: pointer;
	}

	.search-results .view-all:hover {
		background: var(--bg);
		transform: translateY(-1px);
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}

	@media (max-width: 768px) {
		.hide-mobile {
			display: none;
		}

		#app-title {
			font-size: 1.25em;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
			min-width: 0;
		}

		.nav-top {
			flex-direction: row;
			flex-wrap: wrap;
			gap: 0.5em;
			padding-bottom: 0.5em;
		}

		.left-section {
			flex: 0 1 auto;
			min-width: 0;
		}

		.search-section {
			order: 2;
			width: 100%;
			flex: 1 0 100%;
			padding: 0;
			margin-top: 0.5em;
		}

		.right-section {
			flex: 0 0 auto;
		}

		.nav-bottom {
			display: none;
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			background: var(--primary-main);
			padding: 1em;
			z-index: 1000;
		}

		.nav-bottom.active {
			display: block;
		}

		.internal-links {
			flex-direction: column;
			gap: 1em;
		}

		.menu-toggle {
			display: flex;
		}

		.nav-content {
			flex-direction: row;
			gap: 1em;
			align-items: center;
		}

		.nav-top {
			flex-wrap: wrap;
		}

		.left-section {
			flex: 0 1 auto;
			min-width: 0;
		}

		.right-section {
			flex: 0 0 auto;
		}

		.nav-bottom.active + .nav-top .search-section,
		.menu-toggle[aria-expanded="true"] ~ .search-section {
			order: 2;
			width: 100%;
			padding: 0;
			margin-top: 0.5em;
		}
	}
</style>

<script>
	const menuToggle = document.getElementById('menu-toggle');
	const navContainer = document.getElementById('nav-container');
	const searchInput = document.getElementById('search-input');
	const searchResults = document.getElementById('search-results');

	menuToggle?.addEventListener('click', () => {
		navContainer?.classList.toggle('active');
		menuToggle.setAttribute('aria-expanded', 
			navContainer?.classList.contains('active') ? 'true' : 'false'
		);
	});

	let debounceTimeout: ReturnType<typeof setTimeout>;

	searchInput?.addEventListener('input', (e) => {
		const input = e.target as HTMLInputElement;
		clearTimeout(debounceTimeout);

		debounceTimeout = setTimeout(async () => {
			if (input.value.length < 2) {
				if (searchResults) searchResults.style.display = 'none';
				return;
			}

			try {
				const response = await fetch(`/api/search?q=${encodeURIComponent(input.value)}`);
				const results = await response.json();

				if (searchResults) {
					let resultsHtml = '';
					
					if (results.length) {
						// Show only first 5 results
						const displayResults = results.slice(0, 5);
						resultsHtml = displayResults.map((post: any) => `
							<div class="search-result-item" onclick="window.location.href='${post.url}'">
								<div class="search-result-title">${post.title}</div>
							</div>
						`).join('');

						// Always show "View results" button
						resultsHtml += `
							<div class="search-result-item view-all" onclick="window.location.href='/search?q=${encodeURIComponent(input.value)}'">
								View ${results.length > 5 ? 'all ' : ''}${results.length} result${results.length !== 1 ? 's' : ''}
							</div>
						`;
					} else {
						resultsHtml = '<div class="search-result-item">No results found</div>';
					}

					searchResults.innerHTML = resultsHtml;
					searchResults.style.display = 'block';
				}
			} catch (error) {
				console.error('Search error:', error);
			}
		}, 300);
	});

	// Close search results when clicking outside
	document.addEventListener('click', (e) => {
		if (!searchResults?.contains(e.target as Node) && e.target !== searchInput) {
			if (searchResults) searchResults.style.display = 'none';
		}
	});

	// Handle enter key to go to search page
	searchInput?.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') {
			e.preventDefault();
			const input = e.target as HTMLInputElement;
			if (input.value) {
				window.location.href = `/search?q=${encodeURIComponent(input.value)}`;
			}
		}
	});
</script>