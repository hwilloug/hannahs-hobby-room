---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		color: white;
		display: inline-block;
		text-decoration: none;
		padding: 0.5em 1em;
		border-radius: 8px;
		width: 6rem;
		height: 4rem;
	}
	a.active {
		background-color: rgba(var(--primary-light-rgb), 0.2);
	}
	a:hover {
		background-color: rgba(var(--primary-light-rgb), 0.4);
	}
	a:hover :global(.icon svg) {
		width: 42px;
		height: 42px;
	}

	a:hover :global(.text) {
		font-size: 0;
		opacity: 0;
	}

	@media (max-width: 768px) {
		a:hover :global(.icon svg) {
			width: 20px;
			height: 20px;
		}

		a:hover :global(.text) {
			font-size: 0.8em;
			opacity: 1;
		}

		a {
			width: auto;
			height: auto;
		}
	}
</style>
